version: 2
jobs:
    "development":
        machine: true
        steps:
            - checkout
            - run:
                command: |
                    docker login -u $DOCKER_USER -p $DOCKER_PASS
                    docker build -m 6g -t pymesh/pymesh:development --build-arg NUM_CORES=1 --build-arg BRANCH=$CIRCLE_BRANCH docker/development
                    docker push pymesh/pymesh:development
                no_output_timeout: 1200
    "development-test":
        machine: true
        steps:
            - checkout
            - run: |
                cd docker/development
                docker login -u $DOCKER_USER -p $DOCKER_PASS
                ./build.sh
                docker run -it --rm pymesh/pymesh:development-test python -c "import pymesh; pymesh.test()"
    "py3.7":
        machine: true
        steps:
            - checkout
            - run:
                command: |
                    docker login -u $DOCKER_USER -p $DOCKER_PASS
                    docker build -m 6g -t pymesh/pymesh:py3.7 --build-arg NUM_CORES=1 --build-arg BRANCH=$CIRCLE_BRANCH docker/py3.7
                    [ "$CIRCLE_BRANCH" != "main" ] || docker push pymesh/pymesh:py3.7
                no_output_timeout: 1200
    "py3.7-slim":
        machine: true
        steps:
            - checkout
            - run: |
                cd docker/py3.7-slim
                docker login -u $DOCKER_USER -p $DOCKER_PASS
                ./build.sh
                docker push pymesh/pymesh:py3.7-slim
    "py3.7-slim-test":
        machine: true
        steps:
            - run: |
                docker run -it --rm pymesh/pymesh:py3.7-slim python -c "import pymesh; pymesh.test()"
workflows:
    version: 2
    build_and_test_and_deploy:
        jobs:
            - "development"
            - "development-test":
                filters:
                    branches:
                        only: development
                requires:
                    - "development"
            - "py3.7":
                filters:
                    branches:
                        only: main
            - "py3.7-slim":
                requires:
                    - "py3.7"
            - "py3.7-slim-test":
                requires:
                    - "py3.7-slim"
            